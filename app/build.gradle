apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.kotlinstudy"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

project.afterEvaluate {

    task sizeCalculate(group: 'jr', description: 'calculate size of aars') {
        doFirst {
            String[] filterGroups = ['com.jd.jrapp.jdpay']
            String text = "";
            int size = 0;
            println("文件个数" + configurations.archives)
            println("文件个数" + configurations.archives.files.size())

            configurations.archives.files.findAll { File file ->
                println "进入过滤"
                    return true
            }.each {
                println "存在file"
                int itSize = it.size()
                size += itSize
                String itSizeStr = itSize.toString()
                def sizeLength = itSizeStr.size()
                String space=" "
                if(sizeLength<9){
                    for (int i = 0; i < 9 - sizeLength; i++) {
                        space+=" ";
                    }
                }
                String info = itSizeStr + space + it.name
                text += info + "\n"
            }
            text += "\n三方库大小Total: " + size;
            println text
            file('releasenote/size.txt').text = text;
        }
        doLast {
            println "\033[32;1mCreated aars size info at releasenote/size.txt" +
                    "\033[0m"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.aar","*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':common')
    implementation project(path: ':common-ui')
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.2.0'
    //单元测试相关
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def dependencies = rootProject.ext.dependencies
    implementation dependencies.recyclerview
    implementation dependencies.cardview
    implementation dependencies.mpchart
    implementation dependencies.banner
    implementation dependencies.menubar


    implementation dependencies.glide
    annotationProcessor dependencies.glide_annotationProcessor
    implementation dependencies.retrofit
    implementation dependencies.retrofit_convert
    implementation dependencies.photo_lib

    implementation dependencies.smart_refresh_layout
    implementation dependencies.refresh_header_classics
    implementation dependencies.refresh_header_material
    implementation dependencies.refresh_footer_classics

    //room
    implementation dependencies.room
//    annotationProcessor dependencies.room_annotationProcessor
    kapt dependencies.kapt
    implementation dependencies.room_ktx
    testImplementation dependencies.room_test

    implementation dependencies.lifecycle_viewmodel
    implementation dependencies.lifecycle_livedata
    implementation dependencies.lifecycle_viewmodel_savedstate
    implementation dependencies.lifecycle_common_java8

    //获取手机信息
    implementation dependencies.mobileinfo

}