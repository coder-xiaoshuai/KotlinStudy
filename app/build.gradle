apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.kotlinstudy"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation project(path: ':common')
    implementation project(path: ':common-ui')
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'com.google.android.material:material:1.2.0'
    //单元测试相关
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def dependencies = rootProject.ext.dependencies
    implementation dependencies.recyclerview
    implementation dependencies.cardview


    implementation dependencies.glide
    annotationProcessor dependencies.glide_annotationProcessor
    implementation dependencies.retrofit
    implementation dependencies.retrofit_convert
    implementation dependencies.photo_lib

    implementation dependencies.smart_refresh_layout
    implementation dependencies.refresh_header_classics
    implementation dependencies.refresh_header_material
    implementation dependencies.refresh_footer_classics

    //room
    implementation dependencies.room
    annotationProcessor dependencies.room_annotationProcessor
    implementation dependencies.room_ktx
    testImplementation dependencies.room_test

    implementation dependencies.lifecycle_viewmodel
    implementation dependencies.lifecycle_livedata
    implementation dependencies.lifecycle_viewmodel_savedstate
    implementation dependencies.lifecycle_common_java8

}